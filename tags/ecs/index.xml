<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ECS on https://auerl.github.io</title>
    <link>/tags/ecs/</link>
    <description>Recent content in ECS on https://auerl.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019</copyright>
    <lastBuildDate>Mon, 18 Mar 2019 23:05:47 +0100</lastBuildDate>
    
	<atom:link href="/tags/ecs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building a scalable GNSS-IMU sensor fusion pipeline using Docker, Luigi, ECS and S3</title>
      <link>/post/tracktics-data-pipeline/</link>
      <pubDate>Mon, 18 Mar 2019 23:05:47 +0100</pubDate>
      
      <guid>/post/tracktics-data-pipeline/</guid>
      <description>At TRACKTICS we aim to bring sophisticated tactical analytics and performance stats (which have so far been reserved to elite clubs and players) to the lower football leagues, by developing a GNSS-IMU based tracking solution that fits the tight budgets of an average amatuer player or coach, but is yet accurate enough to provide valuable insights for injury prevention and training control.
One of the key ideas that we have put forward in order to achieve this goal was to repurpose methods from the field of sensor fusion, commonly used in fields like autonomous driving or robotics, for the use case of football data enrichment, thus accounting for potential shortcomings in raw data quality caused by inexpensive hardware components and allowing our system to achieve state-of-the art accuracy, akin to that of much more expensive systems.</description>
    </item>
    
    <item>
      <title>Data analysis pipeline</title>
      <link>/project/data-pipelines/</link>
      <pubDate>Fri, 28 Dec 2018 11:27:00 +0100</pubDate>
      
      <guid>/project/data-pipelines/</guid>
      <description>The TRACKTICS Pipeline is a framework that allows to orchestrate parallel DAG (Direct Acyclic Graphs) batch processing jobs. It is based on Docker for artifact deployment, ECS (Amazon EC2 Container Service) for container orchestration and resource discovery, Luigi (by Spotify) for workflow and dependency management, SQS (Amazon Simple Queuing System) as a job queue, a custom service for auto scaling, S3 and Postgres (Amazon RDS) to store results and Kinesis for logging.</description>
    </item>
    
  </channel>
</rss>